/* Welcome to the SQL mini project. For this project, you will use
Springboard' online SQL platform, which you can log into through the
following link:

https://sql.springboard.com/
Username: student
Password: learn_sql@springboard

The data you need is in the "country_club" database. This database
contains 3 tables:
    i) the "Bookings" table,
    ii) the "Facilities" table, and
    iii) the "Members" table.

Note that, if you need to, you can also download these tables locally.

In the mini project, you'll be asked a series of questions. You can
solve them using the platform, but for the final deliverable,
paste the code for each solution into this script, and upload it
to your GitHub.

Before starting with the questions, feel free to take your time,
exploring the data, and getting acquainted with the 3 tables. */



/* Q1: Some of the facilities charge a fee to members, but some do not.
Please list the names of the facilities that do. */

SELECT facid, name, membercost
FROM Facilities
WHERE membercost !=0
LIMIT 0 , 30

facid	name	membercost	
0	Tennis Court 1	5.0
1	Tennis Court 2	5.0
4	Massage Room 1	9.9
5	Massage Room 2	9.9
6	Squash Court	3.5


/* Q2: How many facilities do not charge a fee to members? */

SELECT COUNT( membercost ) AS free_fac_count
FROM Facilities
WHERE membercost =0

free_fac_count	
4


/* Q3: How can you produce a list of facilities that charge a fee to members,
where the fee is less than 20% of the facility's monthly maintenance cost?
Return the facid, facility name, member cost, and monthly maintenance of the
facilities in question. */

SELECT facid, name, membercost, monthlymaintenance
FROM Facilities
WHERE guestcost < monthlymaintenance * .2
LIMIT 0 , 30

facid	name	membercost	monthlymaintenance	
0	Tennis Court 1	5.0	200
1	Tennis Court 2	5.0	200
4	Massage Room 1	9.9	3000
5	Massage Room 2	9.9	3000


/* Q4: How can you retrieve the details of facilities with ID 1 and 5?
Write the query without using the OR operator. */

SELECT *
FROM `Facilities`
WHERE facid
IN ( 1, 5 )
LIMIT 0 , 30

facid	name	membercost	guestcost	initialoutlay	monthlymaintenance	
1	Tennis Court 2	5.0	25.0	8000	200
5	Massage Room 2	9.9	80.0	4000	3000


/* Q5: How can you produce a list of facilities, with each labelled as
'cheap' or 'expensive', depending on if their monthly maintenance cost is
more than $100? Return the name and monthly maintenance of the facilities
in question. */

SELECT name, monthlymaintenance,
CASE WHEN monthlymaintenance <100
THEN 'Cheap'
ELSE 'Expensive'
END AS category
FROM Facilities


name	monthlymaintenance	category	
Tennis Court 1	200	Expensive
Tennis Court 2	200	Expensive
Badminton Court	50	Cheap
Table Tennis	10	Cheap
Massage Room 1	3000	Expensive
Massage Room 2	3000	Expensive
Squash Court	80	Cheap
Snooker Table	15	Cheap
Pool Table	15	Cheap


/* Q6: You'd like to get the first and last name of the last member(s)
who signed up. Do not use the LIMIT clause for your solution. */

SELECT surname, firstname, joindate
FROM Members
ORDER BY joindate
LIMIT 0 , 100



surname	firstname	joindate	
GUEST	GUEST	2012-07-01 00:00:00
Smith	Darren	2012-07-02 12:02:05
Smith	Tracy	2012-07-02 12:08:23
Rownam	Tim	2012-07-03 09:32:15
Joplette	Janice	2012-07-03 10:25:05
Butters	Gerald	2012-07-09 10:44:09
Tracy	Burton	2012-07-15 08:52:55
Dare	Nancy	2012-07-25 08:59:12
Boothe	Tim	2012-07-25 16:02:35
Stibbons	Ponder	2012-07-25 17:09:05
Owen	Charles	2012-08-03 19:42:37
Jones	David	2012-08-06 16:32:55
Baker	Anne	2012-08-10 14:23:22
Farrell	Jemima	2012-08-10 14:28:01
Smith	Jack	2012-08-10 16:22:05
Bader	Florence	2012-08-10 17:52:03
Baker	Timothy	2012-08-15 10:34:25
Pinker	David	2012-08-16 11:32:47
Genting	Matthew	2012-08-19 14:55:55
Mackenzie	Anna	2012-08-26 09:32:05
Coplin	Joan	2012-08-29 08:32:41
Sarwin	Ramnaresh	2012-09-01 08:44:42
Jones	Douglas	2012-09-02 18:43:05
Rumney	Henrietta	2012-09-05 08:42:35
Farrell	David	2012-09-15 08:22:05
Worthington-Smyth	Henry	2012-09-17 12:27:15
Purview	Millicent	2012-09-18 19:04:01
Tupperware	Hyacinth	2012-09-18 19:32:05
Hunt	John	2012-09-19 11:32:45
Crumpet	Erica	2012-09-22 08:36:38
Smith	Darren	2012-09-26 18:08:45


/* Q7: How can you produce a list of all members who have used a tennis court?
Include in your output the name of the court, and the name of the member
formatted as a single column. Ensure no duplicate data, and order by
the member name. */

SELECT DISTINCT f.name, CONCAT( firstname, surname ) AS fullname
FROM Facilities f, Members m, Bookings b
WHERE f.facid = b.facid
AND m.memid = b.memid
AND f.name
IN (
'Tennis Court 1', 'Tennis Court 2'
)
ORDER BY fullname
LIMIT 0 , 30


name	fullname	
Tennis Court 1	AnneBaker
Tennis Court 2	AnneBaker
Tennis Court 2	BurtonTracy
Tennis Court 1	BurtonTracy
Tennis Court 1	CharlesOwen
Tennis Court 2	CharlesOwen
Tennis Court 2	DarrenSmith
Tennis Court 1	DavidFarrell
Tennis Court 2	DavidFarrell
Tennis Court 1	DavidJones
Tennis Court 2	DavidJones
Tennis Court 1	DavidPinker
Tennis Court 1	DouglasJones
Tennis Court 1	EricaCrumpet
Tennis Court 2	FlorenceBader
Tennis Court 1	FlorenceBader
Tennis Court 2	GeraldButters
Tennis Court 1	GeraldButters
Tennis Court 1	GUESTGUEST
Tennis Court 2	GUESTGUEST
Tennis Court 2	HenriettaRumney
Tennis Court 1	JackSmith
Tennis Court 2	JackSmith
Tennis Court 1	JaniceJoplette
Tennis Court 2	JaniceJoplette
Tennis Court 1	JemimaFarrell
Tennis Court 2	JemimaFarrell
Tennis Court 1	JoanCoplin
Tennis Court 2	JohnHunt
Tennis Court 1	JohnHunt


/* Q8: How can you produce a list of bookings on the day of 2012-09-14 which
will cost the member (or guest) more than $30? Remember that guests have
different costs to members (the listed costs are per half-hour 'slot'), and
the guest user's ID is always 0. Include in your output the name of the
facility, the name of the member formatted as a single column, and the cost.
Order by descending cost, and do not use any subqueries. */

SELECT f.name, CONCAT( m.surname, m.firstname ) AS fullname,
CASE WHEN b.memid =0
THEN f.guestcost * b.slots
ELSE f.membercost * b.slots
END AS Totalcost
FROM Bookings b
LEFT JOIN Facilities f ON b.facid = f.facid
LEFT JOIN Members m ON b.memid = m.memid
WHERE b.starttime LIKE '2012-09-14%'
AND IF( m.memid =0, f.guestcost, f.membercost ) >30
ORDER BY 3 DESC
LIMIT 0 , 30

Massage Room 2	GUESTGUEST	320.0
Massage Room 1	GUESTGUEST	160.0
Massage Room 1	GUESTGUEST	160.0
Massage Room 1	GUESTGUEST	160.0



/* Q9: This time, produce the same result as in Q8, but using a subquery. */

SELECT f.name, CONCAT( m.surname, m.firstname ) AS fullname,
CASE WHEN b.memid =0
THEN f.guestcost * b.slots
ELSE f.membercost * b.slots
END AS Totalcost
FROM Bookings b
LEFT JOIN Facilities f ON b.facid = f.facid
LEFT JOIN Members m ON b.memid = m.memid
WHERE b.starttime LIKE '2012-09-14%'
HAVING Totalcost >30
ORDER BY Totalcost DESC
LIMIT 0 , 30

name	fullname	Totalcost	
Massage Room 2	GUESTGUEST	320.0
Massage Room 1	GUESTGUEST	160.0
Massage Room 1	GUESTGUEST	160.0
Massage Room 1	GUESTGUEST	160.0
Tennis Court 2	GUESTGUEST	150.0
Tennis Court 2	GUESTGUEST	75.0
Tennis Court 1	GUESTGUEST	75.0
Tennis Court 1	GUESTGUEST	75.0
Squash Court	GUESTGUEST	70.0
Massage Room 1	FarrellJemima	39.6
Squash Court	GUESTGUEST	35.0
Squash Court	GUESTGUEST	35.0




/* Q10: Produce a list of facilities with a total revenue less than 1000.
The output of facility name and total revenue, sorted by revenue. Remember
that there's a different cost for guests and members! */

SELECT f.name, SUM(
CASE WHEN b.memid =0
THEN f.guestcost * b.slots
ELSE f.membercost * b.slots
END ) AS Revenue
FROM Bookings b
LEFT JOIN Facilities f ON b.facid = f.facid
GROUP BY 1
HAVING revenue <1000
ORDER BY 2 DESC
LIMIT 0 , 30

name	Revenue	
Pool Table	270.0
Snooker Table	240.0
Table Tennis	180.0





